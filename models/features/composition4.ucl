// UCLID TEST
// Solver=z3
// Result=Some(true)

module fib {
  var a, b : integer;

  init {
    a = 0;
    b = 1;
  }

  next {
    a' = b;
    b' = a + b;
  }

  invariant a_le_b: a <= b;

  control {
    induction;
  }
}

type twofib = fib || fib;

module main {
    var double : twofib;

    next {
        next(double);
    }

    invariant shouldnothold: double.left.a == double.right.a && double.left.b == double.right.b; // because left and right can step at different rates

    control {
        induction;
    }
}