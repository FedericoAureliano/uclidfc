// UCLID TEST
// Solver=cvc4
// Result=Some(false)

module fib {
  var a, b : integer;

  init {
    a = 0;
    b = 1;
  }

  next {
    a' = b;
    b' = a + b;
  }

  invariant a_le_b: a <= b;
}

module main {
    type FibAndInt = fib && integer;
    type BoolAndFib = boolean && fib;
    type both = FibAndInt && BoolAndFib;

    var double : both;

    next {
        next(double);
    }

    invariant shouldhold: double.first.first.a == double.second.second.a && double.first.first.b == double.second.second.b;

    control {
        induction;
        check;
    }
}